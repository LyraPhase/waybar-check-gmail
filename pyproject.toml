[project]
name = "waybar-check-gmail"
version = "0.0.1"
description = "Script to check Gmail messages & populate waybar widget with data."
readme = "README.md"
requires-python = ">=3.0"
license = { file = "LICENSE" }
keywords = ["gmail", "inbox", "sway", "waybar", "wayland"]
authors = [{ name = "James Cuzella", email = "james.cuzella@lyraphase.com" }]
maintainers = [{ name = "James Cuzella", email = "james.cuzella@lyraphase.com" }]
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Communications :: Email",
    "Topic :: Desktop Environment :: Window Managers :: Sway",
    "Topic :: Utilities",
]

dependencies = ["filelock ~= 3.12", "httplib2 ~= 0.22", "oauth2client ~= 4.1"]


    [project.urls]
    Homepage      = "https://github.com/LyraPhase/waybar-check-gmail"
    Documentation = "https://github.com/LyraPhase/waybar-check-gmail"
    Repository    = "https://github.com/LyraPhase/waybar-check-gmail.git"
    Changelog     = "https://github.com/LyraPhase/waybar-check-gmail/blob/master/CHANGELOG.md"


#[project.scripts]
#waybar-check-gmail-cli = "waybar_check_gmail:main_cli"

#[project.gui-scripts]
#waybar-check-gmail-gui = "waybar_check_gmail:main_gui"



[tool.isort]
multi_line_output      = 3
include_trailing_comma = true
force_grid_wrap        = 0
line_length            = 90
profile                = "black"

# TODO: tox4 config?
# Ref: https://github.com/tox-dev/tox/issues/999

[tool.tox]
legacy_tox_ini = """
[tox]
requires =
    tox>=4
#env_list = linters, type, py{38,39,310,311}
env_list = linters, py{38,39,310,311}

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311

[testenv]
description = run tests
deps =
    pytest>=7
    pytest-sugar~=0.9
    pytest-mock~=3.10
    pytest-xdist~=3.3
    GitPython~=3.1
allowlist_externals =
    pwd
    ls
    tree
commands =
    pwd
    ls -l
    tree src
    pytest --version
    pytest --basetemp={envtmpdir} --trace-config --override-ini='pythonpath="src"' --import-mode=importlib {posargs:tests}


[testenv:unit]
description = run unit tests
commands =
    pytest -m 'unit and not skip' --basetemp={envtmpdir} {posargs:tests}


[testenv:integration]
description = run integration tests
commands =
    pytest -m 'integration and not skip' --basetemp={envtmpdir} {posargs:tests}


[testenv:linters]
description = run linters
basepython = python3.11
skip_install = true
deps =
    {[testenv:black]deps}
    {[testenv:flake8]deps}
    {[testenv:bandit]deps}
commands =
    {[testenv:black]commands}
    {[testenv:flake8]commands}
    {[testenv:bandit]commands}


[testenv:black]
description = run black code formatter
skip_install = true
basepython = python3.11
deps =
    black
commands =
    black {toxinidir}/src {toxinidir}/tests


[testenv:flake8]
description = run flake8 PEP8 code linter
skip_install = true
basepython = python3.11
deps =
    flake8
    flake8-black
commands =
    flake8


[testenv:bandit]
description = run bandit static code analysis security tool
skip_install = true
basepython = python3.11
deps =
    bandit
commands =
    bandit -c "pyproject.toml" -v -r {toxinidir}/src

"""

[tool.black]
line-length = 90
exclude = '''
/(
    \.git
  | \.direnv
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.vscode
  | _build
  | __pycache__
  | build
  | dist

  # specific to waybar-check-gmail
  | ^/assets
)/
'''
# Targeting future versions as well so we don't have black reformatting code
# en masse later.
target_version = ["py310", "py311", "py37", "py38", "py39"]

[tool.bandit]
exclude_dirs = [
    "*.egg-info",
    "*.pyc",
    ".pytest_cache",
    ".tox",
    ".vscode",
    "__pycache__",
    "coverage-*",
    "test-results*",
    "tests",
]

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]
markers = [
    "great: It's not good, not bad, but somewhat better than good? ¯\\_(ツ)_/¯",
    "serial",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

# TODO: test coverage setup
# [tool.coverage.run]
# branch = true
# source = [""]
